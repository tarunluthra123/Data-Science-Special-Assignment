data <- read.csv('Set3.csv')
View(data)
count(data)
data <- data.frame(data)
count(data)
library(dplyr)
count(data)
data <- read.csv('Set3.csv')
count(data)
data
table(data)
data(iris)
df <- read.csv('Set3.csv')
count(df)
data(iris)
df <- read.csv('Set3.csv')
count(df)
data(iris)
View(iris)
View(df)
df <- read.csv('Set3.csv')
count(df)
View(df)
df <- read.csv('Set3.csv')
count(df)
View(df)
filteredDf <- df %>% filter(Locality == 'QA' & Type_of_offence=='PHYSICAL OFFENSE')
View(filteredDf)
count(df)
# V. Group the offences by Zone.
zoneGroups <- df %>% group_by(zone)
# V. Group the offences by Zone.
zoneGroups <- df %>% group_by('zone')
# V. Group the offences by Zone.
zoneGroups <- df %>% group_by('Zone')
View(zoneGroups)
# V. Group the offences by Zone.
zoneGroups <- df %>% group_by(Zone)
View(zoneGroups)
View(df)
View(zoneGroups)
zoneGroups
View(starwars)
by_species <- starwars %>% group_by(species)
by_species
starwars
starwars
by_species
library(dplyr)
# I. Read the contents of the file
df <- read.csv('Set3.csv')
# II. Count of the number of records
count(df)
# IV. Filter the offences on the basis of Locality (QA only) and Type_of_offence (PHYSICAL OFFENSE only).
filteredDf <- df %>% filter(Locality == 'QA' & Type_of_offence=='PHYSICAL OFFENSE')
# V. Group the offences by Zone.
zoneGroups <- df %>% group_by(Zone)
zoneGroups
clear
clear()
cls
library(dplyr)
# I. Read the contents of the file
df <- read.csv('Set3.csv')
# II. Count of the number of records
count(df)
# III. View the data in a tabular format
View(df)
# I. Read the contents of the file
df <- read.csv('Set3.csv')
library(dplyr)
# I. Read the contents of the file
df <- read.csv('Set3.csv')
# II. Count of the number of records
count(df)
# III. View the data in a tabular format
View(df)
# IV. Filter the offences on the basis of Locality (QA only) and Type_of_offence (PHYSICAL OFFENSE only).
filteredDf <- df %>% filter(Locality == 'QA' & Type_of_offence=='PHYSICAL OFFENSE')
View(filteredDf)
# V. Group the offences by Zone.
zoneGroups <- df %>% group_by(Zone)
zoneGroups
# VI. Get a count of the number of records for each group
count(zoneGroups)
library(ggplot2)
# VII. Using ggplot(), plot a barchart displaying the number of offences in each Zone. (use all the possible parameters)
ggplot(data=zoneGroups)
ggplot(data=zoneGroups, aes(x=Zone, y=n))
# VII. Using ggplot(), plot a barchart displaying the number of offences in each Zone. (use all the possible parameters)
ggplot(data=zoneGroups)
# VII. Using ggplot(), plot a barchart displaying the number of offences in each Zone. (use all the possible parameters)
ggplot(data=zoneGroups) + geom_bar(stat="identity")
# VII. Using ggplot(), plot a barchart displaying the number of offences in each Zone. (use all the possible parameters)
ggplot(data=zoneGroups) + geom_bar(stat="Zone")
# VII. Using ggplot(), plot a barchart displaying the number of offences in each Zone. (use all the possible parameters)
ggplot(data=zoneGroups) + geom_bar(stat="n")
barplot(sort(table(zoneGroups$Zone), decreasing = T),
las = 2, main = "Zone.")
# VII. Using ggplot(), plot a barchart displaying the number of offences in each Zone. (use all the possible parameters)
barplot(sort(table(zoneGroups), decreasing = T),
las = 2, main = "Zone.")
# VII. Using ggplot(), plot a barchart displaying the number of offences in each Zone. (use all the possible parameters)
barplot(sort(table(zoneGroups$Zone), decreasing = T),
las = 2, main = "Zone.")
# VIII. Create a new column called Year_of_event containing the only the year of the event
df$Year_of_event <- df %>% with(substring(Date_of_event,7,10))
View(df)
# VIII. Create a new column called Year_of_event containing the only the year of the event
df$Year_of_event <- df %>% with(as.numeric(format(as.Date(Date_of_event,'%m/%d/%Y'),'%Y')))
View(df)
library(lubridate)
# VIII. Create a new column called Year_of_event containing the only the year of the event
df$Year_of_event <- df %>% with(year(mdy(Date_of_event)))
View(df)
df$Year_of_event
head(df)
glimpse(df)
View(df)
# IX. Group the data by year and summarize
yearGroup <- df %>% group_by(Year_of_event)
summary(yearGroup)
summary(yearGroup)
# IX. Group the data by year and summarize
yearGroup <- df %>% group_by(Year_of_event)
summary(yearGroup)
# X. Plot a barchart with column Year_of_event that displays the number of offences by year
yearGroup$Year_of_event
# X. Plot a barchart with column Year_of_event that displays the number of offences by year
barplot(sort(table(yearGroup$Year_of_event), decreasing = T),
las = 2, main = "Year of event")
View(yearGroup)
count(yearGroup)
View(count(yearGroup))
# X. Plot a barchart with column Year_of_event that displays the number of offences by year
barplot(table(yearGroup$Year_of_event),
las = 2, main = "Year of event")
# X. Plot a barchart with column Year_of_event that displays the number of offences by year
barplot(table(yearGroup$Year_of_event),
las = 20, main = "Year of event")
# X. Plot a barchart with column Year_of_event that displays the number of offences by year
barplot(table(yearGroup$Year_of_event),
las = 2, main = "Year of event")
# XI. Create another bar chart that displays the number of offences by month instead of year
df$Month_of_event <- with(df, month(mdy(Date_of_event))
monthGroup <- df %>% group_by(Month_of_event)
# XI. Create another bar chart that displays the number of offences by month instead of year
df$Month_of_event <- df %>% with(month(mdy(Date_of_event))
monthGroup <- df %>% group_by(Month_of_event)
# XI. Create another bar chart that displays the number of offences by month instead of year
df$Month_of_event <- df %>% with(month(mdy(Date_of_event))
View(df)
# XI. Create another bar chart that displays the number of offences by month instead of year
df$Month_of_event <- df %>% with(month(mdy(Date_of_event)))
View(df)
monthGroup <- df %>% group_by(Month_of_event)
thGroup$Month_of_event),
las = 2, ma
barplot(table(monthGroup$Month_of_event),
las = 2, main = "Year of event")
barplot(table(monthGroup$Month_of_event),
las = 2, main = "Month of event")
df %>% with(month(mdy(Date_of_event)))
monthGroup <- df %>% group_by(Month_of_event)
summarise(monthGroup
# XII. Group and summarize the data by month.
df$Month_of_event <- df %>% with(month(mdy(Date_of_event)))
# XII. Group and summarize the data by month.
df$Month_of_event <- df %>% with(month(mdy(Date_of_event)))
monthGroup <- df %>% group_by(Month_of_event)
summarise(monthGroup)
summary(monthGroup)
summary(monthGroup)
# XIII. Rename the columns to make them more user friendly and view the results
df %>%
rename(
Summary = Summary_of_offence,
Type = Type_of_offence
)
View(df)
library(tidyverse)
# XIII. Rename the columns to make them more user friendly and view the results
df %>%
rename(
Summary = Summary_of_offence,
Type = Type_of_offence
)
View(df)
View(df)
# XIII. Rename the columns to make them more user friendly and view the results
names(df)[names(df) == "Summary_of_offence"] <- "Summary"
names(df)[names(df) == "Type_of_offence"] <- "Type"
View(df)
data(USArrests)
force(USArrests)
help(USArrests)
names(USArrests)
dim(USArrests)
names(USArrests)
dim(USArrests)
View(USArrests)
summary(USArrests)
summary(USArrests)
cor(USArrests)
with(USArrests, plot(UrbanPop, Murder))
with(USArrests, plot(UrbanPop, Assault))
with(USArrests, plot(UrbanPop, Rape))
t == max(USArrests$Assault))
rownames(USArrests)[x]
# most and least assault
x <- which(USArrests$Assault == max(USArrests$Assault))
rownames(USArrests)[x]
assault.median = median(USArrests$Assault)
assault.median
subset(USArrests, Assault > assault.median, select= c(UrbanPop, Assault))
bottomQuartileMurderRate <- quantile(USArrests$Murder)[2]
bottomQuartileMurderRate
subset(USArrests, Murder < bottomQuartileMurderRate, select= c(UrbanPop, Murder))
topQuartileMurderRate <- quantile(USArrests$Murder)[4]
topQuartileMurderRate
subset(USArrests, Murder > topQuartileMurderRate, select= c(UrbanPop, Murder))
